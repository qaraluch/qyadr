# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
# for js
snippet to "todo"
//TODO: $0
endsnippet

snippet cl "console.log"
console.log($0)
endsnippet

snippet cld "console.log debug"
console.log("$1$0 ---->", $1});
endsnippet

snippet af "Arrow function" i
($1) => { $2 }
endsnippet

snippet fun "Function"
function ${1:name}(${2}) {
	return ${3:results};
}
endsnippet

snippet mode "module.exports"
module.exports = $1;
endsnippet

snippet she "#!/usr/bin/env node" b
#!/usr/bin/env node
endsnippet

snippet req "assign a CommonJS-style module to a var"
const ${0:${1/(.+\/)*(\w+)(-|\b|$)(\..+$)?/\u$2/g}} = require("$1");
endsnippet

snippet if "if (condition) { ... }"
if (${1:true}) {
	${VISUAL}$0
}
endsnippet

snippet eif "esle if (condition) { ... }"
else if (${1:true}) {
	${VISUAL}$0
}
endsnippet

snippet rer "Return results statement"
	const results = ${VISUAL}$0;
	return results;
endsnippet

snippet re "Return statement"
	return ${VISUAL}$0;
endsnippet
