snippet function-test
alias funt
  func Test${1:Func}(t *testing.T) {
    t.Run("${2:...}", func(t *testing.T){
      got := $1()
      want := ${0}
      if got != want {
        t.Errorf("got '%s' - want '%s'", got, want)
      }
    })
  }

snippet variable-short
alias v
	${1} := ${0}

snippet import-package
alias imp
	import "${1}"

snippet error-test
alias errt
    if err == nil {
        t.Fatal("${1:expected to get an error}")
    }
    ${0}

snippet ok
    if !ok {
        return ${0}
    }

snippet assert-string
alias asss
    func assertString(t *testing.T, got, want string) {
      t.Helper()
      if got != want {
          t.Errorf("got '%s' - want '%s'", got, want)
      }
    }

snippet assert-error
alias asse
    func assertError(t *testing.T, got, want error) {
      t.Helper()
      if got != want {
          t.Errorf("got error '%s' - want '%s'", got, want)
      }
    }

snippet switch
	switch ${1:var} {
	case ${2:value1}:
		${0}
  default:
	}

snippet if
    if ${1:condition} {
        ${0}
    }

snippet for-loop
alias for
	for ${1} {
		${0}
	}

snippet for-loop-integer
alias fori
	for ${1:i} := 0; $1 < ${2:N}; $1++ {
		${0}
	}

snippet for-loop-range
alias forr
	for ${2:key}, ${3:value} := range ${1} {
		${0}
	}

snippet main
  package main

  import "fmt"
  import "os"

  func main() {
  }
